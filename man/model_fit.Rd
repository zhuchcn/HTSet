% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model_fit.R
\name{model_fit}
\alias{model_fit}
\title{statistic tests for HTSet}
\usage{
model_fit(
  object,
  design,
  coef,
  engine,
  args = list(),
  transform,
  adjust.method = "BH"
)
}
\arguments{
\item{object}{\code{\link{HTSet}}}

\item{design}{matrix. Number of rows must batch number of samples of object.
Usually the output of \code{\link{model.matrix}}.}

\item{coef}{character. The coefficient to perform statistical tests. Must
be in the column names of design.}

\item{engine}{character. The engine to perform statistical analysis.
Supported are limma, edgeR, and DESeq2.}

\item{args}{list. A list of argumnets to be parsed to the backend statistical
engine.}

\item{transform}{function. The transform to be passed to
\code{\link{transform_by_sample}}. No transform is performed by default.}

\item{adjust.method}{character. Method used to adjust the p-values for
multiple testing. See \code{\link{p.adjust}} for the complete list of
supported methods. Default is "BH" for Benjamini-Hochberg test.}
}
\value{
A list-like S3 class ModelFit object is returned with the elements
as following.

\item{\strong{results}}{
  A data.frame of the statistical test results for each gene/
  feature.

  \describe{

  \item{\strong{logFC}}{estimate of the log2-fold-change corresponding to the
  effect.}

  \item{\strong{mean}}{average log2-expression for the gene/feature accross
  all samples. Same as the AveExpr in limma's \code{\link[limma]{topTable}},
  and the baseMean in DESeq2's \code{\link[DESeq2]{results}}.}

  \item{\strong{stat}}{the statistic value of the corresponding test. When
  using limma, this is the t-statistic value, same as the t column in the
  result of \code{\link[limma]{topTable}}. For edgeR, this is the f-statistic
  value for Quansi-likelihood test or the likelihood ratio statistic value
  for likelihood ratio test. Same as the column F or RT in the result of
  edgeR's \code{\link[edgeR]{topTags}}. As for DESeq2, this is the Wald
  statistic value for Wald test or the difference in deviance between the
  reduced model and the full model for likelihood ratio test. same as the
  stat column in the output of DESeq2's \code{\link[DESeq2]{results}}.}

  \item{\strong{pval}}{raw p-value}

  \item{\strong{padj}}{adjusted p-value}
  }
}

\item{\strong{adjust.method}}{Method used to correct for multiple testing}

\item{\strong{design}}{design matrix}

\item{\strong{df}}{degree of freedoms}

\item{\strong{distribution}}{The distribution that p values were calculated}

\item{\strong{engine}}{package used for statistical test}

\item{\strong{coef}}{coefficient tested}

\item{\strong{params}}{additional parameters parsed}
}
\description{
This is a wrapper of several widely used statistical method for
high through-put experimental data such as RNAseq. The
\code{\link[limma]{limma-package}} performs linear model on continous data,
or cooperate with the \code{\link[limma]{voom}} function to handle count
data. The \code{\link[edgeR]{edgeR-package}} and
\code{\link[DESeq2]{DESeq2-package}} performs negative binomial generalized
linear model on count data.
}
\examples{
data(exrna)
design = model.matrix(~ Condition, data = exrna$pdata)
coef = "ConditionSystemic Lupus Erythematosus"
fit1 = model_fit(object = exrna, design = design, coef = coef, engine = "limma", args = list(voom = TRUE))
fit2 = model_fit(object = exrna, design = design, coef = coef, engine = "edgeR")
fit3 = model_fit(object = exrna, design = design, coef = coef, engine = "edgeR", args = list(model = "lrt"))
fit4 = model_fit(object = exrna, design = design, coef = coef, engine = "DESeq2")
}
\seealso{
\code{\link{HTSet-class}}
\code{\link[limma]{lmFit}}
\code{\link[limma]{voom}}
\code{\link[edgeR]{glmQLFit}}
\code{\link[edgeR]{glmLRT}}
\code{\link[DESeq2]{DESeq}}
}
\author{
Chenghao Zhu
}
